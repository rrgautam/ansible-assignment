- hosts: bastion
  gather_facts: true
  become: true
  tasks:
  - name: Create Dynamic Inventory
    command: |
      tower-cli inventory create -n "Three tier inventory" --organization "Default"


  - name: Create groups needed to deploy app
    command: |
      tower-cli group create -n "{{ item }}" --inventory "Three tier inventory" 
    loop:
      - apps 
      - appdbs
      - frontends
      - bastions
      - tag_AnsibleGroup_bastions
      - tag_AnsibleGroup_frontends
      - tag_AnsibleGroup_apps
      - tag_AnsibleGroup_appdbs

  - name: Associate AWS tags as children to bastions group
    command: |
      tower-cli group associate --group tag_AnsibleGroup_bastions --parent bastions --inventory "Three tier inventory"

  - name: Associate AWS tags as children to frontends group
    command: |
      tower-cli group associate --group tag_AnsibleGroup_frontends --parent frontends --inventory "Three tier inventory"

  - name: Associate AWS tags as children to apps group
    command: |
      tower-cli group associate --group tag_AnsibleGroup_apps --parent apps --inventory "Three tier inventory"

  - name: Associate AWS tags as children to appdbs group
    command: |
      tower-cli group associate --group tag_AnsibleGroup_appdbs --parent appdbs --inventory "Three tier inventory"

  - name: Add localhost as host 
    command: |
      tower-cli host create -n localhost --inventory "Three tier inventory" --variables @/root/inventory_vars.json

  - name: Create inventory source with ec2 script
    command: |
      tower-cli inventory_source create -n "Three tier inventory source" --inventory "Three tier inventory" --source ec2 --credential "AWS test1" --source-regions "us-east-1" --instance-filters "tag:instance_filter=three-tier-app-rewati*" --overwrite yes --update-on-launch yes
